{"version":3,"sources":["webpack:///static/9.aba1afbf.chunk.js","webpack:///./catalog/pages/inputs/index.md?ad0f","webpack:///./catalog/pages/inputs/index.md"],"names":["webpackJsonp","1184","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1209"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,IAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/9.aba1afbf.chunk.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(65);\n    var PageRenderer = __webpack_require__(15).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1209)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./index.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./index.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1209:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## SearchInput\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: onBlur\\n    Type: function\\n    Default: null\\n    Notes: Handler function\\n  - Prop: onFocus\\n    Type: function\\n    Default: null\\n    Notes: Handler function\\n  - Prop: slim\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Size design variant\\n  - Prop: invert\\n    Type: boolean\\n    Default: N/A\\n    Notes: Color design variant\\n  - Prop: className\\n    Type: string\\n    Default: null\\n    Notes: Enables passing a className to the Container\\n  - Prop: iconProps\\n    Type: object\\n    Default: null\\n    Notes: Enables passing props to the SearchIcon\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Header>\\n    <Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n        <Search placeholder=\\\"Enter term...\\\" iconProps={{ color: \\\"currentColor\\\" }} />\\n    </Column>\\n</Header>\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={10} large={7} style={{ padding: \\\"16px 0\\\" }}>\\n            <Search invert placeholder=\\\"Enter term...\\\" />\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Search Slim\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Header>\\n    <Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n        <Search slim placeholder=\\\"Enter term...\\\" />\\n    </Column>\\n</Header>\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={10} large={7} style={{ padding: \\\"16px 0\\\" }}>\\n            <Search invert slim placeholder=\\\"Enter term...\\\" />\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Radio Group Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: array of strings\\n    Default: N/A\\n    Notes: Can only be one value within the array\\n  - Prop: onChange\\n    Type: Function\\n    Default: N/A\\n    Notes:\\n```\\n\\n## Radio Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: size\\n    Type: string\\n    Default: small\\n    Notes: Can be small or large\\n  - Prop: name\\n    Type: string\\n    Default: N/A\\n    Notes: Is Required\\n  - Prop: isActive\\n    Type: boolean\\n    Default: \\\"true\\\"\\n    Notes: Will disable radio input\\n  - Prop: \\\"value\\\"\\n    Type: string\\n    Default: N/A\\n    Notes: Is required\\n  - Prop: index\\n    Type: number\\n    Default: N/A\\n    Notes: Is required for keyboard accessibility\\n  - Prop: isTopAligned\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Align layout to the top to handle custom component passed to the label\\n```\\n\\n```react\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={6} style={{ padding: \\\"16px 0\\\" }}>\\n          <RadioGroup aria-label=\\\"test large radio\\\">\\n                <RadioButton size=\\\"large\\\" name=\\\"example1\\\" value=\\\"FirstButton\\\" index={0} isTopAligned>\\n                    Testing One\\n                    <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing One description</p>\\n                </RadioButton>\\n                <RadioButton size=\\\"large\\\" name=\\\"example1\\\" value=\\\"SecondButton\\\" index={1}>\\n                    Testing Two\\n                </RadioButton>\\n                <RadioButton size=\\\"large\\\" name=\\\"example1\\\" value=\\\"ThirdButton\\\" index={2}>\\n                    Testing Three\\n                </RadioButton>\\n          </RadioGroup>\\n        </Column>\\n        <Column medium={6} style={{ padding: \\\"16px 0\\\" }}>\\n          <RadioGroup aria-label=\\\"test small radio\\\">\\n                <RadioButton size=\\\"small\\\" name=\\\"example2\\\" value=\\\"1\\\" index={0}>\\n                    Testing One\\n                </RadioButton>\\n\\n                <RadioButton size=\\\"small\\\" name=\\\"example2\\\" value=\\\"2\\\" index={1} isTopAligned>\\n                    Testing Two\\n                    <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing Two description</p>\\n                </RadioButton>\\n\\n                <RadioButton size=\\\"small\\\" name=\\\"example2\\\" value=\\\"3\\\" index={2}>\\n                    Testing Three\\n                </RadioButton>\\n          </RadioGroup>\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Check Box Group\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: array of strings\\n    Default: N/A\\n    Notes: Can be many values within the array\\n  - Prop: onChange\\n    Type: Function\\n    Default: N/A\\n    Notes:\\n  - Prop: isTopAligned\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Align layout to the top to handle custom component passed to the label\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row>\\n            <Column medium={6}  style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckBoxGroup value={[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}>\\n                    <CheckBoxButton isTopAligned size=\\\"large\\\" name=\\\"Testing One\\\"  value=\\\"1\\\" index={0} style={{ marginBottom: '10px' }}>\\n                        Testing One\\n                        <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing One description</p>\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"large\\\" name=\\\"Testing Two\\\" value=\\\"2\\\" index={1} style={{ marginBottom: '10px' }}>\\n                        Testing Two\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"large\\\" name=\\\"Testing Three\\\" value=\\\"3\\\" index={2}>\\n                        Testing Three\\n                    </CheckBoxButton>\\n                </CheckBoxGroup>\\n            </Column>\\n            <Column medium={6} style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckBoxGroup >\\n                    <CheckBoxButton isTopAligned size=\\\"small\\\" name=\\\"Testing One\\\"  value=\\\"1\\\" index={0} style={{ marginBottom: '10px' }}>\\n                        Testing One\\n                        <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing One description</p>\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"small\\\" name=\\\"Testing Two\\\" value=\\\"2\\\" index={1} style={{ marginBottom: '10px' }}>\\n                        Testing Two\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"small\\\" name=\\\"Testing Three\\\" value=\\\"3\\\" index={2}>\\n                        Testing Three\\n                    </CheckBoxButton>\\n                </CheckBoxGroup>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Check Box Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: size\\n    Type: string\\n    Default: small\\n    Notes: Can be small or large\\n  - Prop: name\\n    Type: string\\n    Default: N/A\\n    Notes: Is Required\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Is Required\\n  - Prop: disabled\\n    Type: boolean\\n    Default: 'false'\\n    Notes: Will disable checkbox input\\n  - Prop: index\\n    Type: number\\n    Default: N/A\\n    Notes: Is required for keyboard accessibility (only when used with CheckBoxGroup)\\n  - Prop: onClick\\n    Type: function\\n    Default: N/A\\n    Notes: click handler (required when used without CheckBoxGroup)\\n  - Prop: isChecked\\n    Type: boolean or \\\"indeterminate\\\"\\n    Default: N/A\\n    Notes: defines if checked or indeterminate (required when used without CheckBoxGroup)\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row>\\n            <Column medium={6}  style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckboxWrapperExample size=\\\"small\\\"/>\\n            </Column>\\n            <Column medium={6}  style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckboxWrapperExample size=\\\"large\\\"/>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Field Input\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: labelPosition\\n    Type: string\\n    Default: top\\n    Notes: Can be top or left\\n  - Prop: placeholder\\n    Type: string\\n    Default: N/A\\n    Notes: Is not required\\n  - Prop: name\\n    Type: string\\n    Default: \\\"null\\\"\\n    Notes: Optional input name.\\n  - Prop: label\\n    Type: string\\n    Default: N/A\\n    Notes: Optional input label. If not passed label container will not be rendered\\n  - Prop: labelStyle\\n    Type: object\\n    Default: N/A\\n    Notes: Optional. Allows editing label style.\\n  - Prop: errorMessage\\n    Type: string\\n    Default: N/A\\n    Notes: Will present a different style when a prop is supplied\\n  - Prop: disabled\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Will disable text input\\n  - Prop: size\\n    Type: string\\n    Default: regular\\n    Notes: Defines the size of an input field. Can be small, regular or large\\n  - Prop: tag\\n    Type: enum(\\\"input\\\", \\\"textarea\\\")\\n    Default: N/A\\n    Notes: Changes the underlying HTML Element.\\n```\\n\\n```react\\nspan: 6\\n---\\n<Container>\\n    <ThemeProvider theme={{ themeName: 'tm' }}>\\n        <Row>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\"  style={{ color: 'blue' }} placeholder=\\\"Hint Text\\\" name=\\\"test1\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test2\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test3\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test4\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test5\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test6\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test7\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test8\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test9\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input tag=\\\"textarea\\\" labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test111\\\" label=\\\"Textarea\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n            </Column>\\n        </Row>\\n    </ThemeProvider>\\n</Container>\\n```\\n\\n```react\\nspan: 6\\n---\\n<Container>\\n    <ThemeProvider theme={{ themeName: 'tm' }}>\\n        <Row>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test10\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test11\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test12\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test13\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test14\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test15\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test16\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test17\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test18\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n            </Column>\\n        </Row>\\n    </ThemeProvider>\\n</Container>\\n```\\n\\n## Drop Down Group\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: onChange\\n    Type: function\\n    Default: \\\"null\\\"\\n    Notes: Invoked with an array of updatedSelections when one or more option(s) is selected by the user\\n  - Prop: variant\\n    Type:\\n      enum(\\n        DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL,\\n        DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL,\\n      )\\n    Default: DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL\\n    Notes: Specifies a layout variant of the DropDownGroup\\n  - Prop: value\\n    Type: array\\n    Default: []\\n    Notes: Specifies array of initial string values\\n  - Prop: valueOverride\\n    Type: array\\n    Default: \\\"null\\\"\\n    Notes: Specifies array of string values that override internal state\\n  - Prop: label\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Visible with selected option.\\n  - Prop: placeholder\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Visible instead of selected option. Overrides label. Supported in both variants.\\n  - Prop: hiddenLabel\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: To avail proper screen reader's reading when placeholder and label can not be displayed in view. Can be used only with label.\\n  - Prop: isOpen\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Used to override internal isOpen state\\n  - Prop: keywordSearch\\n    Type: boolean\\n    Default: 'true'\\n    Notes: Used to override ability to use keyboard to focus on drop down option\\n  - Prop: withKeyboardProvider\\n    Type: boolean\\n    Default: 'true'\\n    Notes: Used to override inclusion of a KeyboardProvider to handle keydown events\\n  - Prop: shouldOpenDownward\\n    Type: boolean\\n    Default: 'true'\\n    Notes: Used to ensure that the DropDownGroup always opens downward\\n  - Prop: size\\n    Type: small or large\\n    Default: \\\"large\\\"\\n    Notes: Defines size\\n  - Prop: fullWidth\\n    Type: boolean\\n    Default: 'false'\\n    Notes: Defines if width is 100% of container\\n  - Prop: onDropDownToggle\\n    Type: function\\n    Default: 'null'\\n    Notes: Callback invoked when dropdown open/hide event fired\\n```\\n\\n## Drop Down Option\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: index\\n    Type: number\\n    Default: N/A\\n    Notes: Required\\n  - Prop: className\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Passed to StyledDropDownItem\\n  - Prop: onClick\\n    Type: function\\n    Default: \\\"null\\\"\\n    Notes: Invoked with the synthetic event object when the DropDownOption is clicked\\n  - Prop: chevronVisible\\n    Type: bool\\n    Default: true\\n    Notes: Indicates whether show or hide right chevron icon\\n  - Prop: icon\\n    Type: node\\n    Default: null\\n    Notes: Inserts an icon before label text\\n  - Prop: ...props\\n    Type: any\\n    Default:\\n    Notes: Passes through any other props to underlying DropDownInput\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  size=\\\"small\\\"\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  label=\\\"Selected:\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"5\\\" index={5}>Option Six</DropDownOption>\\n                    <DropDownOption value=\\\"6\\\" index={6}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"7\\\" index={7}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"8\\\" index={8}>Option Four</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  value={[\\\"3\\\"]}\\n                  placeholder=\\\"Select an option\\\"\\n                  shouldOpenDownward={false}\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"5\\\" index={5}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"6\\\" index={6}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"7\\\" index={7}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"8\\\" index={8}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"9\\\" index={9}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"10\\\" index={10}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"11\\\" index={11}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"12\\\" index={12}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"13\\\" index={13}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"14\\\" index={14}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"15\\\" index={15}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"16\\\" index={16}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"17\\\" index={17}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"18\\\" index={18}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"19\\\" index={19}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"20\\\" index={20}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  disabled\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Chevron hidden\\\"\\n                  chevronVisible={false}\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n        </Row>\\n        <Spacing top={{small: \\\"normal\\\"}} />\\n        <Row >\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  size=\\\"small\\\"\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\\n                  label=\\\"Sort By:\\\"\\n                  placeholder=\\\"Select an option\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\\n                  label=\\\"Sort By:\\\"\\n                  placeholder=\\\"Select an option\\\"\\n                  disabled\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  value={[\\\"all\\\"]}\\n                  placeholder=\\\"date range\\\"\\n                  icon={<CalendarIcon />}\\n                >\\n                    <DropDownOption value=\\\"all\\\" index={0}>All dates</DropDownOption>\\n                    <DropDownOption value=\\\"this-weekend\\\" index={1}>This weekends</DropDownOption>\\n                    <DropDownOption value=\\\"custom\\\" index={2}>Date range</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Drop Down Label\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: size\\n    Type: small or large\\n    Default: \\\"large\\\"\\n    Notes: Defines size\\n  - Prop: disabled\\n    Type: bool\\n    Default: false\\n    Notes: defines if toggle is disabled\\n  - Prop: ...props\\n    Type: any\\n    Default:\\n    Notes: Passes through any other props to underlying label element\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row >\\n            <Column medium={4}>\\n                <DropDownLabel id=\\\"labeltext\\\" size=\\\"small\\\">Label text</DropDownLabel>\\n                <DropDownGroup\\n                  size=\\\"small\\\"\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  aria-describedby=\\\"labeltext\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={4}>\\n                <DropDownLabel id=\\\"fullwidthlabel\\\">Full Width Drop Down</DropDownLabel>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  aria-describedby=\\\"fullwidthlabel\\\"\\n                  fullWidth\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={4}>\\n                <DropDownLabel disabled>Label text</DropDownLabel>\\n                <DropDownGroup\\n                  value={[\\\"0\\\"]}\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  disabled\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Button Group\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: title\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: value\\n    Type: object\\n    Default: N/A\\n    Notes: Specifies default active buttons. The object key is section value and the object value is array of button values\\n  - Prop: onChange\\n    Type: function\\n    Default: N/A\\n    Notes:\\n```\\n\\n## Button Group Section\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: title\\n    Type: string\\n    Default: N/A\\n    Notes:\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: isMultiSelect\\n    Type: bool\\n    Default: 'false'\\n    Notes:\\n```\\n\\n## Button Group Section Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: onClick\\n    Type: function\\n    Default: N/A\\n    Notes:\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={8} large={6} style={{ padding: \\\"16px 0\\\" }}>\\n            <ButtonGroup title=\\\"Sort by:\\\" value={{ 0: [\\\"0\\\"] }}>\\n                <ButtonGroup.Section value=\\\"0\\\" isMultiSelect>\\n                    <ButtonGroup.Button value=\\\"0\\\">All</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">Date</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">Name (A-Z)</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">Name (Z-A)</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n            </ButtonGroup>\\n            <ButtonGroup title=\\\"Filter by:\\\" value={{ 0: [\\\"0\\\"], 1: [\\\"0\\\"] }}>\\n                <ButtonGroup.Section title=\\\"Category\\\" value=\\\"0\\\">\\n                    <ButtonGroup.Button value=\\\"0\\\">All</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"4\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"5\\\">Button Label</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n                <ButtonGroup.Section title=\\\"Dates\\\" value=\\\"1\\\">\\n                    <ButtonGroup.Button value=\\\"0\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"4\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"5\\\">Button Label</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n                <ButtonGroup.Section title=\\\"Distance (miles)\\\" value=\\\"2\\\">\\n                    <ButtonGroup.Button value=\\\"0\\\">All</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">10</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">20</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">30</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"4\\\">40</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n            </ButtonGroup>\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Toggle\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: bool\\n    Default:\\n    Notes: defines toggle position\\n  - Prop: size\\n    Type: string\\n    Default:\\n    Notes: defines toggle size, can be one `regular` and `large`\\n  - Prop: disabled\\n    Type: bool\\n    Default:\\n    Notes: defines if toggle is disabled\\n  - Prop: onToggle\\n    Type: function\\n    Default:\\n    Notes: on toggle callback function\\n  - Prop: onClick\\n    Type: function\\n    Default:\\n    Notes: on click callback function\\n  - Prop: onMouseOver\\n    Type: function\\n    Default:\\n    Notes: on mouseOver callback function\\n  - Prop: onMouseOut\\n    Type: function\\n    Default:\\n    Notes: on mouseOut callback function\\n  - Prop: onBlur\\n    Type: function\\n    Default:\\n    Notes: on blur callback function\\n  - Prop: onFocus\\n    Type: function\\n    Default:\\n    Notes: on focus callback function\\n  - Prop: onKeyPress\\n    Type: function\\n    Default:\\n    Notes: on keyPress callback function, by default `space` is used to switch the toggle\\n```\\n\\n```react\\n---\\n<div>\\n    <ToggleWrapperExample size=\\\"small\\\"/>\\n    <ToggleWrapperExample value={false} size=\\\"small\\\" disabled/>\\n    <ToggleWrapperExample size=\\\"large\\\" />\\n    <ToggleWrapperExample size=\\\"large\\\" disabled/>\\n</div>\\n```\\n\\n## Quantity selector\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: disabled\\n    Type: bool\\n    Default:\\n    Notes: defines if toggle is disabled\\n  - Prop: min\\n    Type: number\\n    Default: 0\\n    Notes: defines min number. The decrement button is disabled when min value is reached.\\n  - Prop: max\\n    Type: number\\n    Default: 99\\n    Notes: defines max number. The increment button is disabled when max value is reached.\\n  - Prop: checkValue\\n    Type: function\\n    Default:\\n    Notes: call back function before value is updated. Is passed the new value and updates if the function returns true and does not if returns false.\\n  - Prop: handleValueUpdate\\n    Type: function\\n    Default:\\n    Notes: call back function after value is updated either by buttons or keyboard. Use this function instead of onChange.\\n  - Prop: onValueChanged\\n    Type: function\\n    Default:\\n    Notes: deprecated. Use handleValueUpdate instead.\\n  - Prop: incrementBtnLabel\\n    Type: string\\n    Default: Increase Quantity\\n    Notes: Aria label of the Increment button for accessibility requirement\\n  - Prop: decrementBtnLabel\\n    Type: string\\n    Default: Decrease Quantity\\n    Notes: Aria label of the Decrement button for accessibility requirement\\n```\\n\\nIt also accepts any event handlers. e.g. `onBlur`, `onFocus` etc. as well as styles object.\\n\\n```react\\nspan: 6\\n---\\n<div style={{ display: 'flex' }}>\\n    <div style={{ width: '30%' }}>\\n        <QtySelector value={50} />\\n    </div>\\n    <div style={{ width: '30%' }}>\\n        <QtySelector value={2} min={2} max={4}/>\\n    </div>\\n    <div style={{ width: '30%' }}>\\n        <QtySelector value={50} disabled/>\\n    </div>\\n</div>\\n```\\n\\n## Search Component\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: variant\\n    Type: string\\n    Default: large\\n    Notes: Small 36px and large 44px\\n  - Prop: placeholder\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Placeholder text\\n  - Prop: className\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Additional class\\n  - Prop: searchBtnAreaLabel\\n    Type: string\\n    Default: 'Search button'\\n    Notes: For accessibility\\n  - Prop: clearBtnAreaLabel\\n    Type: string\\n    Default: \\\"Clear button\\\"\\n    Notes: For accessibility\\n  - Prop: cancelBtnAreaLabel\\n    Type: string\\n    Default: \\\"Cancel button\\\"\\n    Notes: For accessibility\\n  - Prop: inputAreaLabel\\n    Type: string\\n    Default: \\\"Search input\\\"\\n    Notes: For accessibility\\n  - Prop: value\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Input value. A required prop\\n  - Prop: onChange\\n    Type: function\\n    Default: null\\n    Notes: Required prop. Controlled input.\\n  - Prop: onFocus\\n    Type: function\\n    Default: noop\\n    Notes: Callback when input gets focused\\n  - Prop: onBlur\\n    Type: function\\n    Default: noop\\n    Notes: Callback when input gets blurred.\\n  - Prop: searchIconSelect\\n    Type: function\\n    Default: noop\\n    Notes: Callback when search icon is clicked.\\n  - Prop: clearText\\n    Type: function\\n    Default: noop\\n    Notes: Callback when x button is clicked.\\n  - Prop: cancelCallback\\n    Type: function\\n    Default: noop\\n    Notes: Callback when cancel button is clicked.\\n  - Prop: hasBackground\\n    Type: boolean\\n    Default: false\\n    Notes: changes opacity when focused in order to get better contrast on the background.\\n  - Prop: iconOnly\\n    Type: boolean\\n    Default: false\\n    Notes: Input gets invisible when not focused. Only the icon stays as a button.\\n  - Prop: isSuggestOpened\\n    Type: boolean\\n    Default: false\\n    Notes: When true removes border radius from the input in order to fit with the search suggest.\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n  <Header>\\n    <Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n        <SearchInput hasBackground placeholder=\\\"Enter term...\\\" onChange={()=>{}} value=\\\"asd\\\" />\\n    </Column>\\n  </Header>\\n  <div style={{marginTop: \\\"10px\\\"}} />\\n  <SearchInput placeholder=\\\"Enter term...\\\" onChange={()=>{}} value=\\\"\\\" variant=\\\"small\\\" />\\n  <div style={{marginTop: \\\"10px\\\"}} />\\n  <SearchInput placeholder=\\\"Enter term...\\\" iconOnly onChange={()=>{}} value=\\\"\\\" variant=\\\"small\\\" />\\n  <div style={{marginTop: \\\"10px\\\"}} />\\n  <SearchInput placeholder=\\\"Enter term...\\\" iconOnly onChange={()=>{}} value=\\\"\\\" />\\n</Column>\\n```\\n\\n## Search Input Mobile\\n\\nSame props as SearchComponent. Shows on top of the screen when focused and has cancel button.\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n  <SearchInputMobile placeholder=\\\"Enter term...\\\" onChange={()=>{}} value=\\\"\\\" />\\n</Column>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/9.aba1afbf.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../node_modules/raw-loader/index.js!./index.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./index.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./index.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/pages/inputs/index.md\n// module id = 1184\n// module chunks = 9","module.exports = \"## SearchInput\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: onBlur\\n    Type: function\\n    Default: null\\n    Notes: Handler function\\n  - Prop: onFocus\\n    Type: function\\n    Default: null\\n    Notes: Handler function\\n  - Prop: slim\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Size design variant\\n  - Prop: invert\\n    Type: boolean\\n    Default: N/A\\n    Notes: Color design variant\\n  - Prop: className\\n    Type: string\\n    Default: null\\n    Notes: Enables passing a className to the Container\\n  - Prop: iconProps\\n    Type: object\\n    Default: null\\n    Notes: Enables passing props to the SearchIcon\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Header>\\n    <Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n        <Search placeholder=\\\"Enter term...\\\" iconProps={{ color: \\\"currentColor\\\" }} />\\n    </Column>\\n</Header>\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={10} large={7} style={{ padding: \\\"16px 0\\\" }}>\\n            <Search invert placeholder=\\\"Enter term...\\\" />\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Search Slim\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Header>\\n    <Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n        <Search slim placeholder=\\\"Enter term...\\\" />\\n    </Column>\\n</Header>\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={10} large={7} style={{ padding: \\\"16px 0\\\" }}>\\n            <Search invert slim placeholder=\\\"Enter term...\\\" />\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Radio Group Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: array of strings\\n    Default: N/A\\n    Notes: Can only be one value within the array\\n  - Prop: onChange\\n    Type: Function\\n    Default: N/A\\n    Notes:\\n```\\n\\n## Radio Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: size\\n    Type: string\\n    Default: small\\n    Notes: Can be small or large\\n  - Prop: name\\n    Type: string\\n    Default: N/A\\n    Notes: Is Required\\n  - Prop: isActive\\n    Type: boolean\\n    Default: \\\"true\\\"\\n    Notes: Will disable radio input\\n  - Prop: \\\"value\\\"\\n    Type: string\\n    Default: N/A\\n    Notes: Is required\\n  - Prop: index\\n    Type: number\\n    Default: N/A\\n    Notes: Is required for keyboard accessibility\\n  - Prop: isTopAligned\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Align layout to the top to handle custom component passed to the label\\n```\\n\\n```react\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={6} style={{ padding: \\\"16px 0\\\" }}>\\n          <RadioGroup aria-label=\\\"test large radio\\\">\\n                <RadioButton size=\\\"large\\\" name=\\\"example1\\\" value=\\\"FirstButton\\\" index={0} isTopAligned>\\n                    Testing One\\n                    <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing One description</p>\\n                </RadioButton>\\n                <RadioButton size=\\\"large\\\" name=\\\"example1\\\" value=\\\"SecondButton\\\" index={1}>\\n                    Testing Two\\n                </RadioButton>\\n                <RadioButton size=\\\"large\\\" name=\\\"example1\\\" value=\\\"ThirdButton\\\" index={2}>\\n                    Testing Three\\n                </RadioButton>\\n          </RadioGroup>\\n        </Column>\\n        <Column medium={6} style={{ padding: \\\"16px 0\\\" }}>\\n          <RadioGroup aria-label=\\\"test small radio\\\">\\n                <RadioButton size=\\\"small\\\" name=\\\"example2\\\" value=\\\"1\\\" index={0}>\\n                    Testing One\\n                </RadioButton>\\n\\n                <RadioButton size=\\\"small\\\" name=\\\"example2\\\" value=\\\"2\\\" index={1} isTopAligned>\\n                    Testing Two\\n                    <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing Two description</p>\\n                </RadioButton>\\n\\n                <RadioButton size=\\\"small\\\" name=\\\"example2\\\" value=\\\"3\\\" index={2}>\\n                    Testing Three\\n                </RadioButton>\\n          </RadioGroup>\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Check Box Group\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: array of strings\\n    Default: N/A\\n    Notes: Can be many values within the array\\n  - Prop: onChange\\n    Type: Function\\n    Default: N/A\\n    Notes:\\n  - Prop: isTopAligned\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Align layout to the top to handle custom component passed to the label\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row>\\n            <Column medium={6}  style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckBoxGroup value={[\\\"1\\\",\\\"2\\\",\\\"3\\\"]}>\\n                    <CheckBoxButton isTopAligned size=\\\"large\\\" name=\\\"Testing One\\\"  value=\\\"1\\\" index={0} style={{ marginBottom: '10px' }}>\\n                        Testing One\\n                        <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing One description</p>\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"large\\\" name=\\\"Testing Two\\\" value=\\\"2\\\" index={1} style={{ marginBottom: '10px' }}>\\n                        Testing Two\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"large\\\" name=\\\"Testing Three\\\" value=\\\"3\\\" index={2}>\\n                        Testing Three\\n                    </CheckBoxButton>\\n                </CheckBoxGroup>\\n            </Column>\\n            <Column medium={6} style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckBoxGroup >\\n                    <CheckBoxButton isTopAligned size=\\\"small\\\" name=\\\"Testing One\\\"  value=\\\"1\\\" index={0} style={{ marginBottom: '10px' }}>\\n                        Testing One\\n                        <p style={{ fontSize: \\\"12px\\\", margin: \\\"3px 0 0 0\\\", color: \\\"rgba(38, 38, 38, 0.65\\\" }}>Testing One description</p>\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"small\\\" name=\\\"Testing Two\\\" value=\\\"2\\\" index={1} style={{ marginBottom: '10px' }}>\\n                        Testing Two\\n                    </CheckBoxButton>\\n                    <CheckBoxButton size=\\\"small\\\" name=\\\"Testing Three\\\" value=\\\"3\\\" index={2}>\\n                        Testing Three\\n                    </CheckBoxButton>\\n                </CheckBoxGroup>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Check Box Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: size\\n    Type: string\\n    Default: small\\n    Notes: Can be small or large\\n  - Prop: name\\n    Type: string\\n    Default: N/A\\n    Notes: Is Required\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Is Required\\n  - Prop: disabled\\n    Type: boolean\\n    Default: 'false'\\n    Notes: Will disable checkbox input\\n  - Prop: index\\n    Type: number\\n    Default: N/A\\n    Notes: Is required for keyboard accessibility (only when used with CheckBoxGroup)\\n  - Prop: onClick\\n    Type: function\\n    Default: N/A\\n    Notes: click handler (required when used without CheckBoxGroup)\\n  - Prop: isChecked\\n    Type: boolean or \\\"indeterminate\\\"\\n    Default: N/A\\n    Notes: defines if checked or indeterminate (required when used without CheckBoxGroup)\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row>\\n            <Column medium={6}  style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckboxWrapperExample size=\\\"small\\\"/>\\n            </Column>\\n            <Column medium={6}  style={{ padding: \\\"16px 0\\\" }}>\\n                <CheckboxWrapperExample size=\\\"large\\\"/>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Field Input\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: labelPosition\\n    Type: string\\n    Default: top\\n    Notes: Can be top or left\\n  - Prop: placeholder\\n    Type: string\\n    Default: N/A\\n    Notes: Is not required\\n  - Prop: name\\n    Type: string\\n    Default: \\\"null\\\"\\n    Notes: Optional input name.\\n  - Prop: label\\n    Type: string\\n    Default: N/A\\n    Notes: Optional input label. If not passed label container will not be rendered\\n  - Prop: labelStyle\\n    Type: object\\n    Default: N/A\\n    Notes: Optional. Allows editing label style.\\n  - Prop: errorMessage\\n    Type: string\\n    Default: N/A\\n    Notes: Will present a different style when a prop is supplied\\n  - Prop: disabled\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Will disable text input\\n  - Prop: size\\n    Type: string\\n    Default: regular\\n    Notes: Defines the size of an input field. Can be small, regular or large\\n  - Prop: tag\\n    Type: enum(\\\"input\\\", \\\"textarea\\\")\\n    Default: N/A\\n    Notes: Changes the underlying HTML Element.\\n```\\n\\n```react\\nspan: 6\\n---\\n<Container>\\n    <ThemeProvider theme={{ themeName: 'tm' }}>\\n        <Row>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\"  style={{ color: 'blue' }} placeholder=\\\"Hint Text\\\" name=\\\"test1\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test2\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test3\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test4\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test5\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test6\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test7\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test8\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"top\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test9\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input tag=\\\"textarea\\\" labelPosition=\\\"top\\\" placeholder=\\\"Hint Text\\\" name=\\\"test111\\\" label=\\\"Textarea\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n            </Column>\\n        </Row>\\n    </ThemeProvider>\\n</Container>\\n```\\n\\n```react\\nspan: 6\\n---\\n<Container>\\n    <ThemeProvider theme={{ themeName: 'tm' }}>\\n        <Row>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test10\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test11\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test12\\\" label=\\\"First Name\\\" size=\\\"small\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test13\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test14\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test15\\\" label=\\\"First Name\\\"/>\\n                </Spacing>\\n            </Column>\\n            <Column medium={4}>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test16\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" placeholder=\\\"Hint Text\\\" name=\\\"test17\\\" label=\\\"First Name\\\"  errorMessage=\\\"Something Went Wrong\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n                <Spacing top={{small: \\\"cozy\\\"}}>\\n                    <Input labelPosition=\\\"left\\\" hintText=\\\"Hint Text\\\" disabled={true} name=\\\"test18\\\" label=\\\"First Name\\\" size=\\\"large\\\"/>\\n                </Spacing>\\n            </Column>\\n        </Row>\\n    </ThemeProvider>\\n</Container>\\n```\\n\\n## Drop Down Group\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: onChange\\n    Type: function\\n    Default: \\\"null\\\"\\n    Notes: Invoked with an array of updatedSelections when one or more option(s) is selected by the user\\n  - Prop: variant\\n    Type:\\n      enum(\\n        DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL,\\n        DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL,\\n      )\\n    Default: DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL\\n    Notes: Specifies a layout variant of the DropDownGroup\\n  - Prop: value\\n    Type: array\\n    Default: []\\n    Notes: Specifies array of initial string values\\n  - Prop: valueOverride\\n    Type: array\\n    Default: \\\"null\\\"\\n    Notes: Specifies array of string values that override internal state\\n  - Prop: label\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Visible with selected option.\\n  - Prop: placeholder\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Visible instead of selected option. Overrides label. Supported in both variants.\\n  - Prop: hiddenLabel\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: To avail proper screen reader's reading when placeholder and label can not be displayed in view. Can be used only with label.\\n  - Prop: isOpen\\n    Type: boolean\\n    Default: \\\"false\\\"\\n    Notes: Used to override internal isOpen state\\n  - Prop: keywordSearch\\n    Type: boolean\\n    Default: 'true'\\n    Notes: Used to override ability to use keyboard to focus on drop down option\\n  - Prop: withKeyboardProvider\\n    Type: boolean\\n    Default: 'true'\\n    Notes: Used to override inclusion of a KeyboardProvider to handle keydown events\\n  - Prop: shouldOpenDownward\\n    Type: boolean\\n    Default: 'true'\\n    Notes: Used to ensure that the DropDownGroup always opens downward\\n  - Prop: size\\n    Type: small or large\\n    Default: \\\"large\\\"\\n    Notes: Defines size\\n  - Prop: fullWidth\\n    Type: boolean\\n    Default: 'false'\\n    Notes: Defines if width is 100% of container\\n  - Prop: onDropDownToggle\\n    Type: function\\n    Default: 'null'\\n    Notes: Callback invoked when dropdown open/hide event fired\\n```\\n\\n## Drop Down Option\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: index\\n    Type: number\\n    Default: N/A\\n    Notes: Required\\n  - Prop: className\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Passed to StyledDropDownItem\\n  - Prop: onClick\\n    Type: function\\n    Default: \\\"null\\\"\\n    Notes: Invoked with the synthetic event object when the DropDownOption is clicked\\n  - Prop: chevronVisible\\n    Type: bool\\n    Default: true\\n    Notes: Indicates whether show or hide right chevron icon\\n  - Prop: icon\\n    Type: node\\n    Default: null\\n    Notes: Inserts an icon before label text\\n  - Prop: ...props\\n    Type: any\\n    Default:\\n    Notes: Passes through any other props to underlying DropDownInput\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  size=\\\"small\\\"\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  label=\\\"Selected:\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"5\\\" index={5}>Option Six</DropDownOption>\\n                    <DropDownOption value=\\\"6\\\" index={6}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"7\\\" index={7}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"8\\\" index={8}>Option Four</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  value={[\\\"3\\\"]}\\n                  placeholder=\\\"Select an option\\\"\\n                  shouldOpenDownward={false}\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"5\\\" index={5}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"6\\\" index={6}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"7\\\" index={7}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"8\\\" index={8}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"9\\\" index={9}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"10\\\" index={10}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"11\\\" index={11}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"12\\\" index={12}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"13\\\" index={13}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"14\\\" index={14}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"15\\\" index={15}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"16\\\" index={16}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"17\\\" index={17}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"18\\\" index={18}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"19\\\" index={19}>Option Five</DropDownOption>\\n                    <DropDownOption value=\\\"20\\\" index={20}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  disabled\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Chevron hidden\\\"\\n                  chevronVisible={false}\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One One One One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n        </Row>\\n        <Spacing top={{small: \\\"normal\\\"}} />\\n        <Row >\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  size=\\\"small\\\"\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\\n                  label=\\\"Sort By:\\\"\\n                  placeholder=\\\"Select an option\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\\n                  label=\\\"Sort By:\\\"\\n                  placeholder=\\\"Select an option\\\"\\n                  disabled\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={3}>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  value={[\\\"all\\\"]}\\n                  placeholder=\\\"date range\\\"\\n                  icon={<CalendarIcon />}\\n                >\\n                    <DropDownOption value=\\\"all\\\" index={0}>All dates</DropDownOption>\\n                    <DropDownOption value=\\\"this-weekend\\\" index={1}>This weekends</DropDownOption>\\n                    <DropDownOption value=\\\"custom\\\" index={2}>Date range</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Drop Down Label\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: size\\n    Type: small or large\\n    Default: \\\"large\\\"\\n    Notes: Defines size\\n  - Prop: disabled\\n    Type: bool\\n    Default: false\\n    Notes: defines if toggle is disabled\\n  - Prop: ...props\\n    Type: any\\n    Default:\\n    Notes: Passes through any other props to underlying label element\\n```\\n\\n```react\\nspan: 6\\n---\\n<ThemeProvider theme={{ themeName: 'tm' }}>\\n    <Container>\\n        <Row >\\n            <Column medium={4}>\\n                <DropDownLabel id=\\\"labeltext\\\" size=\\\"small\\\">Label text</DropDownLabel>\\n                <DropDownGroup\\n                  size=\\\"small\\\"\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  aria-describedby=\\\"labeltext\\\"\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={4}>\\n                <DropDownLabel id=\\\"fullwidthlabel\\\">Full Width Drop Down</DropDownLabel>\\n                <DropDownGroup\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  aria-describedby=\\\"fullwidthlabel\\\"\\n                  fullWidth\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n            <Column medium={4}>\\n                <DropDownLabel disabled>Label text</DropDownLabel>\\n                <DropDownGroup\\n                  value={[\\\"0\\\"]}\\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\\n                  placeholder=\\\"Select an option\\\"\\n                  disabled\\n                >\\n                    <DropDownOption value=\\\"0\\\" index={0}>Option One</DropDownOption>\\n                    <DropDownOption value=\\\"1\\\" index={1}>Option Two</DropDownOption>\\n                    <DropDownOption value=\\\"2\\\" index={2}>Option Three</DropDownOption>\\n                    <DropDownOption value=\\\"3\\\" index={3}>Option Four</DropDownOption>\\n                    <DropDownOption value=\\\"4\\\" index={4}>Option Five</DropDownOption>\\n                </DropDownGroup>\\n            </Column>\\n        </Row>\\n    </Container>\\n</ThemeProvider>\\n```\\n\\n## Button Group\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: title\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: value\\n    Type: object\\n    Default: N/A\\n    Notes: Specifies default active buttons. The object key is section value and the object value is array of button values\\n  - Prop: onChange\\n    Type: function\\n    Default: N/A\\n    Notes:\\n```\\n\\n## Button Group Section\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: title\\n    Type: string\\n    Default: N/A\\n    Notes:\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: isMultiSelect\\n    Type: bool\\n    Default: 'false'\\n    Notes:\\n```\\n\\n## Button Group Section Button\\n\\n### Props\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: string\\n    Default: N/A\\n    Notes: Required\\n  - Prop: onClick\\n    Type: function\\n    Default: N/A\\n    Notes:\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Container>\\n    <Row>\\n        <Column medium={8} large={6} style={{ padding: \\\"16px 0\\\" }}>\\n            <ButtonGroup title=\\\"Sort by:\\\" value={{ 0: [\\\"0\\\"] }}>\\n                <ButtonGroup.Section value=\\\"0\\\" isMultiSelect>\\n                    <ButtonGroup.Button value=\\\"0\\\">All</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">Date</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">Name (A-Z)</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">Name (Z-A)</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n            </ButtonGroup>\\n            <ButtonGroup title=\\\"Filter by:\\\" value={{ 0: [\\\"0\\\"], 1: [\\\"0\\\"] }}>\\n                <ButtonGroup.Section title=\\\"Category\\\" value=\\\"0\\\">\\n                    <ButtonGroup.Button value=\\\"0\\\">All</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"4\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"5\\\">Button Label</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n                <ButtonGroup.Section title=\\\"Dates\\\" value=\\\"1\\\">\\n                    <ButtonGroup.Button value=\\\"0\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"4\\\">Button Label</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"5\\\">Button Label</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n                <ButtonGroup.Section title=\\\"Distance (miles)\\\" value=\\\"2\\\">\\n                    <ButtonGroup.Button value=\\\"0\\\">All</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"1\\\">10</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"2\\\">20</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"3\\\">30</ButtonGroup.Button>\\n                    <ButtonGroup.Button value=\\\"4\\\">40</ButtonGroup.Button>\\n                </ButtonGroup.Section>\\n            </ButtonGroup>\\n        </Column>\\n    </Row>\\n</Container>\\n```\\n\\n## Toggle\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: value\\n    Type: bool\\n    Default:\\n    Notes: defines toggle position\\n  - Prop: size\\n    Type: string\\n    Default:\\n    Notes: defines toggle size, can be one `regular` and `large`\\n  - Prop: disabled\\n    Type: bool\\n    Default:\\n    Notes: defines if toggle is disabled\\n  - Prop: onToggle\\n    Type: function\\n    Default:\\n    Notes: on toggle callback function\\n  - Prop: onClick\\n    Type: function\\n    Default:\\n    Notes: on click callback function\\n  - Prop: onMouseOver\\n    Type: function\\n    Default:\\n    Notes: on mouseOver callback function\\n  - Prop: onMouseOut\\n    Type: function\\n    Default:\\n    Notes: on mouseOut callback function\\n  - Prop: onBlur\\n    Type: function\\n    Default:\\n    Notes: on blur callback function\\n  - Prop: onFocus\\n    Type: function\\n    Default:\\n    Notes: on focus callback function\\n  - Prop: onKeyPress\\n    Type: function\\n    Default:\\n    Notes: on keyPress callback function, by default `space` is used to switch the toggle\\n```\\n\\n```react\\n---\\n<div>\\n    <ToggleWrapperExample size=\\\"small\\\"/>\\n    <ToggleWrapperExample value={false} size=\\\"small\\\" disabled/>\\n    <ToggleWrapperExample size=\\\"large\\\" />\\n    <ToggleWrapperExample size=\\\"large\\\" disabled/>\\n</div>\\n```\\n\\n## Quantity selector\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: disabled\\n    Type: bool\\n    Default:\\n    Notes: defines if toggle is disabled\\n  - Prop: min\\n    Type: number\\n    Default: 0\\n    Notes: defines min number. The decrement button is disabled when min value is reached.\\n  - Prop: max\\n    Type: number\\n    Default: 99\\n    Notes: defines max number. The increment button is disabled when max value is reached.\\n  - Prop: checkValue\\n    Type: function\\n    Default:\\n    Notes: call back function before value is updated. Is passed the new value and updates if the function returns true and does not if returns false.\\n  - Prop: handleValueUpdate\\n    Type: function\\n    Default:\\n    Notes: call back function after value is updated either by buttons or keyboard. Use this function instead of onChange.\\n  - Prop: onValueChanged\\n    Type: function\\n    Default:\\n    Notes: deprecated. Use handleValueUpdate instead.\\n  - Prop: incrementBtnLabel\\n    Type: string\\n    Default: Increase Quantity\\n    Notes: Aria label of the Increment button for accessibility requirement\\n  - Prop: decrementBtnLabel\\n    Type: string\\n    Default: Decrease Quantity\\n    Notes: Aria label of the Decrement button for accessibility requirement\\n```\\n\\nIt also accepts any event handlers. e.g. `onBlur`, `onFocus` etc. as well as styles object.\\n\\n```react\\nspan: 6\\n---\\n<div style={{ display: 'flex' }}>\\n    <div style={{ width: '30%' }}>\\n        <QtySelector value={50} />\\n    </div>\\n    <div style={{ width: '30%' }}>\\n        <QtySelector value={2} min={2} max={4}/>\\n    </div>\\n    <div style={{ width: '30%' }}>\\n        <QtySelector value={50} disabled/>\\n    </div>\\n</div>\\n```\\n\\n## Search Component\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: variant\\n    Type: string\\n    Default: large\\n    Notes: Small 36px and large 44px\\n  - Prop: placeholder\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Placeholder text\\n  - Prop: className\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Additional class\\n  - Prop: searchBtnAreaLabel\\n    Type: string\\n    Default: 'Search button'\\n    Notes: For accessibility\\n  - Prop: clearBtnAreaLabel\\n    Type: string\\n    Default: \\\"Clear button\\\"\\n    Notes: For accessibility\\n  - Prop: cancelBtnAreaLabel\\n    Type: string\\n    Default: \\\"Cancel button\\\"\\n    Notes: For accessibility\\n  - Prop: inputAreaLabel\\n    Type: string\\n    Default: \\\"Search input\\\"\\n    Notes: For accessibility\\n  - Prop: value\\n    Type: string\\n    Default: \\\"\\\"\\n    Notes: Input value. A required prop\\n  - Prop: onChange\\n    Type: function\\n    Default: null\\n    Notes: Required prop. Controlled input.\\n  - Prop: onFocus\\n    Type: function\\n    Default: noop\\n    Notes: Callback when input gets focused\\n  - Prop: onBlur\\n    Type: function\\n    Default: noop\\n    Notes: Callback when input gets blurred.\\n  - Prop: searchIconSelect\\n    Type: function\\n    Default: noop\\n    Notes: Callback when search icon is clicked.\\n  - Prop: clearText\\n    Type: function\\n    Default: noop\\n    Notes: Callback when x button is clicked.\\n  - Prop: cancelCallback\\n    Type: function\\n    Default: noop\\n    Notes: Callback when cancel button is clicked.\\n  - Prop: hasBackground\\n    Type: boolean\\n    Default: false\\n    Notes: changes opacity when focused in order to get better contrast on the background.\\n  - Prop: iconOnly\\n    Type: boolean\\n    Default: false\\n    Notes: Input gets invisible when not focused. Only the icon stays as a button.\\n  - Prop: isSuggestOpened\\n    Type: boolean\\n    Default: false\\n    Notes: When true removes border radius from the input in order to fit with the search suggest.\\n```\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n  <Header>\\n    <Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n        <SearchInput hasBackground placeholder=\\\"Enter term...\\\" onChange={()=>{}} value=\\\"asd\\\" />\\n    </Column>\\n  </Header>\\n  <div style={{marginTop: \\\"10px\\\"}} />\\n  <SearchInput placeholder=\\\"Enter term...\\\" onChange={()=>{}} value=\\\"\\\" variant=\\\"small\\\" />\\n  <div style={{marginTop: \\\"10px\\\"}} />\\n  <SearchInput placeholder=\\\"Enter term...\\\" iconOnly onChange={()=>{}} value=\\\"\\\" variant=\\\"small\\\" />\\n  <div style={{marginTop: \\\"10px\\\"}} />\\n  <SearchInput placeholder=\\\"Enter term...\\\" iconOnly onChange={()=>{}} value=\\\"\\\" />\\n</Column>\\n```\\n\\n## Search Input Mobile\\n\\nSame props as SearchComponent. Shows on top of the screen when focused and has cancel button.\\n\\n```react\\nresponsive: true\\nspan: 6\\n---\\n<Column medium={10} large={7} style={{ paddingBottom: \\\"16px\\\" }}>\\n  <SearchInputMobile placeholder=\\\"Enter term...\\\" onChange={()=>{}} value=\\\"\\\" />\\n</Column>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/pages/inputs/index.md\n// module id = 1209\n// module chunks = 9"],"sourceRoot":""}