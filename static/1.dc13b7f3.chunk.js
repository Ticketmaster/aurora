webpackJsonp([1],{1187:function(t,e,o){var n=o(0),i=o(65),r=o(15).PageRenderer;r.__esModule&&(r=r.default);var a=i({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(1212)}},componentWillMount:function(){},render:function(){return n.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,t.exports=a},1212:function(t,e){t.exports='### Tooltip\n\nTooltip Component\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: children\n    Type: node\n    Default:\n    Notes: Render as the Tooltip\'s children\n  - Prop: isVisible\n    Type: boolean\n    Default: \'false\'\n    Notes: Show/hide tooltip\n  - Prop: variant\n    Type: one of \'dark\', \'light\'\n    Default: \'light\'\n    Notes: Changes tooltip color scheme\n  - Prop: direction\n    Type: one of \'left\', \'right\', \'top\', \'bottom\'\n    Default: \'auto\'\n    Notes: Changes tooltip direction from the item that triggers it. Auto shows the tooltip on top/bottom and makes sure it is always visibel in the view port and in the restriction container that is being passed as second param to getDimensionsFromEvent\n  - Prop: position\n    Type: Object\n    Default: all props are 0\n    Notes: This prop is generated from Tooltip.getDimensionsFromEvent(e, parent) static function. The function should receive the event that triggers the Tooltip (usually hover). Secondary parameter that restricts tooltip to be visible in a certain container. Work only if direction is auto\n```\n\n```react\n---\n<div style={{ display: \'flex\', justifyContent: \'space-between\' }}>\n  <TooltipDemo\n    direction="bottom"\n    text="Hover for Bottom Tooltip"\n  />\n  <TooltipDemo\n    direction="top"\n    text="Hover for Top Tooltip"\n  />\n  <TooltipDemo\n    direction="right"\n    text="Hover for Right Tooltip"\n  />\n  <TooltipDemo\n    direction="left"\n    text="Hover for Left Tooltip"\n  />\n</div>\n```\n\n```react\n---\n<div>\n  <TooltipRestrictedDemo />\n</div>\n```\n\n#### Manual Refresh\n\n- If the content of a tooltip can change while the tooltip is visible, you can call a `refresh()` method on the component to reset the position based on the content.\n\nExample: hover over tooltip for more than 2 sec\n\n```react\nspan: 2\n---\n<div>\n  <TooltipRestrictedAsyncDemo />\n</div>\n```\n\n### Seat Tooltip\n\nSeat Tooltip Component\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: children\n    Type: node\n    Default:\n    Notes: Render as the Seat Tooltip\'s children\n  - Prop: isVisible\n    Type: boolean\n    Default: \'false\'\n    Notes: Show/hide tooltip\n  - Prop: variant\n    Type: one of \'dark\', \'light\'\n    Default: \'light\'\n    Notes: Changes tooltip color scheme\n  - Prop: size\n    Type: one of \'small\', \'large\'\n    Default: \'large\'\n  - Prop: direction\n    Type: one of \'left\', \'right\', \'top\', \'bottom\'\n    Default: \'auto\'\n    Notes: Changes tooltip direction from the item that triggers it. Auto shows the tooltip on top/bottom and makes sure it is always visibel in the view port and in the restriction container that is being passed as second param to getDimensionsFromEvent\n  - Prop: section\n    Type: string or number\n    Default: n/a\n    Notes: Required field. Shows the section in seat data\n  - Prop: row\n    Type: string or number\n    Default: n/a\n    Notes: Required field. Shows the row in seat data\n  - Prop: seat\n    Type: string or number\n    Default: n/a\n    Notes: Required field. Shows the seat in seat data\n  - Prop: position\n    Type: Object\n    Default: all props are 0\n    Notes: This prop is generated from SeatTooltip.getDimensionsFromEvent(e, parent) static function. The function should recieve the event that triggers the Tooltip (usually hover). Secondary parameter that restricts seat tooltip to be visible in a certain container. Work only if direction is auto\n```\n\n```react\n---\n<div>\n  <div style={{ display: \'flex\', justifyContent: \'space-between\' }}>\n    <SeatTooltipDemo\n      direction="bottom"\n      text="Hover for Bottom Tooltip"\n    />\n    <SeatTooltipDemo\n      direction="top"\n      text="Hover for Top Tooltip"\n    />\n    <SeatTooltipDemo\n      direction="right"\n      text="Hover for Right Tooltip"\n    />\n    <SeatTooltipDemo\n      direction="left"\n      text="Hover for Left Tooltip"\n    />\n  </div>\n  <div style={{ display: \'flex\', justifyContent: \'space-between\', marginTop: \'20px\' }}>\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="bottom"\n      text="Hover for Bottom Tooltip"\n    />\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="top"\n      text="Hover for Top Tooltip"\n    />\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="right"\n      text="Hover for Right Tooltip"\n    />\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="left"\n      text="Hover for Left Tooltip"\n    />\n  </div>\n</div>\n```\n'}});
//# sourceMappingURL=1.dc13b7f3.chunk.js.map