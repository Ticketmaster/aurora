// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaseText with responsiveSize should render correctly with {"responsiveSize":{"small":"hecto","medium":"kilo","large":"giga","xLarge":"tera"}} 1`] = `
<div
  className="text text--dark text--primary kehNZt"
  disabled={false}
  size={
    Object {
      "large": "giga",
      "medium": "kilo",
      "small": "hecto",
      "xLarge": "tera",
      "xSmall": "hecto",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"responsiveSize":{"small":"hecto","medium":"kilo","large":"giga"}} 1`] = `
<div
  className="text text--dark text--primary fysbYd"
  disabled={false}
  size={
    Object {
      "large": "giga",
      "medium": "kilo",
      "small": "hecto",
      "xLarge": undefined,
      "xSmall": "hecto",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"responsiveSize":{"xSmall":"hecto"}} 1`] = `
<div
  className="text text--dark text--primary IkyOL"
  disabled={false}
  size={
    Object {
      "large": undefined,
      "medium": undefined,
      "small": undefined,
      "xLarge": undefined,
      "xSmall": "hecto",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"size":"hecto","responsiveSize":{"xSmall":"uno","small":"hecto","medium":"kilo","large":"giga","xLarge":"tera"}} 1`] = `
<div
  className="text text--dark text--primary clHaii"
  disabled={false}
  size={
    Object {
      "large": "giga",
      "medium": "kilo",
      "small": "hecto",
      "xLarge": "tera",
      "xSmall": "uno",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"size":"hecto"} 1`] = `
<div
  className="text text--dark text--primary jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render disabled text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the disabled prop equals true 1`] = `
<div
  className="text text--accent text-tm text--disabled dkxMGx"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render disabled text with a div tag in the dark variant when the disabled prop equals true 1`] = `
<div
  className="text text--dark text-tm text--disabled ciVyJH"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render disabled text with a div tag in the light variant when the variant prop equals light and the disabled prop equals true 1`] = `
<div
  className="text text--light text-tm text--disabled fFwRCm"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in an accent variant that has only one shade when the variant prop equals accent and a valid accent prop is passed 1`] = `
<div
  className="text text--accent text--gray04 text-tm VEHol"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in an accent variant when the variant prop equals accent and a valid accent prop is passed 1`] = `
<div
  className="text text--accent text-tm hqReBB"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in the dark variant by default 1`] = `
<div
  className="text text--dark text-tm text--primary jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in the dark variant with a className prop when passed by default 1`] = `
<div
  className="text text--dark text-tm text--primary text--custom jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in the light variant when the variant prop equals light 1`] = `
<div
  className="text text--light text-tm text--primary jzdvZf"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag of the size prop passed in the dark variant by default 1`] = `
<div
  className="text text--dark text-tm text--primary rZEQD"
  disabled={false}
  size="giga"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag of the weight prop passed in the dark variant by default 1`] = `
<div
  className="text text--dark text-tm text--primary iBHbKH"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a tag prop in the dark variant by default 1`] = `
<span
  className="text text--dark text-tm text--primary jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</span>
`;

exports[`BaseText with themed color palette should render secondary text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the secondary prop equals true 1`] = `
<div
  className="text text--accent text-tm text--secondary cepzIz"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render secondary text with a div tag in the dark variant when the secondary prop equals true 1`] = `
<div
  className="text text--dark text-tm text--secondary jiqFEH"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render secondary text with a div tag in the light variant when the variant prop equals light and the secondary prop equals true 1`] = `
<div
  className="text text--light text-tm text--secondary kjAtVH"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render disabled text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the disabled prop equals true 1`] = `
<div
  className="text text--accent text--azure text--disabled eocPoR"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render disabled text with a div tag in the dark variant when the disabled prop equals true 1`] = `
<div
  className="text text--dark text--disabled ciVyJH"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render disabled text with a div tag in the light variant when the variant prop equals light and the disabled prop equals true 1`] = `
<div
  className="text text--light text--disabled fFwRCm"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in an accent variant that has only one shade when the variant prop equals accent and a valid accent prop is passed 1`] = `
<div
  className="text text--accent text--aquamarine pvKWX"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in an accent variant when the variant prop equals accent and a valid accent prop is passed 1`] = `
<div
  className="text text--accent text--azure cepzIz"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in the dark variant by default 1`] = `
<div
  className="text text--dark text--primary jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in the dark variant with a className prop when passed by default 1`] = `
<div
  className="text text--dark text--primary text--custom jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in the light variant when the variant prop equals light 1`] = `
<div
  className="text text--light text--primary jzdvZf"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag of the size prop passed in the dark variant by default 1`] = `
<div
  className="text text--dark text--primary rZEQD"
  disabled={false}
  size="giga"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag of the weight prop passed in the dark variant by default 1`] = `
<div
  className="text text--dark text--primary iBHbKH"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a tag prop in the dark variant by default 1`] = `
<span
  className="text text--dark text--primary jOyigh"
  disabled={false}
  size="hecto"
>
  Text
</span>
`;

exports[`BaseText with traditional color palette should render secondary text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the secondary prop equals true 1`] = `
<div
  className="text text--accent text--azure text--secondary jlSMnS"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render secondary text with a div tag in the dark variant when the secondary prop equals true 1`] = `
<div
  className="text text--dark text--secondary jiqFEH"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render secondary text with a div tag in the light variant when the variant prop equals light and the secondary prop equals true 1`] = `
<div
  className="text text--light text--secondary kjAtVH"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;
