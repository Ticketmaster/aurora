// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BaseText with responsiveSize should render correctly with {"responsiveSize":{"small":"hecto","medium":"kilo","large":"giga","xLarge":"tera"}} 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

@media screen and (min-width:480px) {
  .c0 {
    font-size: 14px;
  }
}

@media screen and (min-width:768px) {
  .c0 {
    font-size: 16px;
  }
}

@media screen and (min-width:1024px) {
  .c0 {
    font-size: 20px;
  }
}

@media screen and (min-width:1440px) {
  .c0 {
    font-size: 24px;
  }
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size={
    Object {
      "large": "giga",
      "medium": "kilo",
      "small": "hecto",
      "xLarge": "tera",
      "xSmall": "hecto",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"responsiveSize":{"small":"hecto","medium":"kilo","large":"giga"}} 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

@media screen and (min-width:480px) {
  .c0 {
    font-size: 14px;
  }
}

@media screen and (min-width:768px) {
  .c0 {
    font-size: 16px;
  }
}

@media screen and (min-width:1024px) {
  .c0 {
    font-size: 20px;
  }
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size={
    Object {
      "large": "giga",
      "medium": "kilo",
      "small": "hecto",
      "xLarge": undefined,
      "xSmall": "hecto",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"responsiveSize":{"xSmall":"hecto"}} 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size={
    Object {
      "large": undefined,
      "medium": undefined,
      "small": undefined,
      "xLarge": undefined,
      "xSmall": "hecto",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"size":"hecto","responsiveSize":{"xSmall":"uno","small":"hecto","medium":"kilo","large":"giga","xLarge":"tera"}} 1`] = `
.c0 {
  font-size: 12px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

@media screen and (min-width:480px) {
  .c0 {
    font-size: 14px;
  }
}

@media screen and (min-width:768px) {
  .c0 {
    font-size: 16px;
  }
}

@media screen and (min-width:1024px) {
  .c0 {
    font-size: 20px;
  }
}

@media screen and (min-width:1440px) {
  .c0 {
    font-size: 24px;
  }
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size={
    Object {
      "large": "giga",
      "medium": "kilo",
      "small": "hecto",
      "xLarge": "tera",
      "xSmall": "uno",
    }
  }
>
  Text
</div>
`;

exports[`BaseText with responsiveSize should render correctly with {"size":"hecto"} 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render disabled text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the disabled prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: #d6e7fa;
}

<div
  className="text text--accent text-tm text--disabled c0"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render disabled text with a div tag in the dark variant when the disabled prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,0.4);
}

<div
  className="text text--dark text-tm text--disabled c0"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render disabled text with a div tag in the light variant when the variant prop equals light and the disabled prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(255,255,255,0.5);
}

<div
  className="text text--light text-tm text--disabled c0"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in an accent variant that has only one shade when the variant prop equals accent and a valid accent prop is passed 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: #ebebeb;
}

<div
  className="text text--accent text--gray04 text-tm c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in an accent variant when the variant prop equals accent and a valid accent prop is passed 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: #0150a7;
}

<div
  className="text text--accent text-tm c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in the dark variant by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text-tm text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in the dark variant with a className prop when passed by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text-tm text--primary text--custom c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag in the light variant when the variant prop equals light 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(255,255,255,1);
}

<div
  className="text text--light text-tm text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag of the size prop passed in the dark variant by default 1`] = `
.c0 {
  font-size: 20px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text-tm text--primary c0"
  disabled={false}
  size="giga"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a div tag of the weight prop passed in the dark variant by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 600;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text-tm text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render primary text with a tag prop in the dark variant by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<span
  className="text text--dark text-tm text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</span>
`;

exports[`BaseText with themed color palette should render secondary text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the secondary prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: #026cdf;
}

<div
  className="text text--accent text-tm text--secondary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render secondary text with a div tag in the dark variant when the secondary prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,0.65);
}

<div
  className="text text--dark text-tm text--secondary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with themed color palette should render secondary text with a div tag in the light variant when the variant prop equals light and the secondary prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(255,255,255,0.7);
}

<div
  className="text text--light text-tm text--secondary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render disabled text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the disabled prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(2,108,223,0.1);
}

<div
  className="text text--accent text--azure text--disabled c0"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render disabled text with a div tag in the dark variant when the disabled prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,0.4);
}

<div
  className="text text--dark text--disabled c0"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render disabled text with a div tag in the light variant when the variant prop equals light and the disabled prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(255,255,255,0.5);
}

<div
  className="text text--light text--disabled c0"
  disabled={true}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in an accent variant that has only one shade when the variant prop equals accent and a valid accent prop is passed 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: #00ffff;
}

<div
  className="text text--accent text--aquamarine c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in an accent variant when the variant prop equals accent and a valid accent prop is passed 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: #026cdf;
}

<div
  className="text text--accent text--azure c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in the dark variant by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in the dark variant with a className prop when passed by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text--primary text--custom c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag in the light variant when the variant prop equals light 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(255,255,255,1);
}

<div
  className="text text--light text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag of the size prop passed in the dark variant by default 1`] = `
.c0 {
  font-size: 20px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size="giga"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a div tag of the weight prop passed in the dark variant by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 600;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<div
  className="text text--dark text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render primary text with a tag prop in the dark variant by default 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,1);
}

<span
  className="text text--dark text--primary c0"
  disabled={false}
  size="hecto"
>
  Text
</span>
`;

exports[`BaseText with traditional color palette should render secondary text with a div tag in an accent variant when the variant prop equals accent, a valid accent prop is passed, and the secondary prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(2,108,223,0.2);
}

<div
  className="text text--accent text--azure text--secondary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render secondary text with a div tag in the dark variant when the secondary prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(38,38,38,0.65);
}

<div
  className="text text--dark text--secondary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;

exports[`BaseText with traditional color palette should render secondary text with a div tag in the light variant when the variant prop equals light and the secondary prop equals true 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  text-transform: none;
  color: rgba(255,255,255,0.7);
}

<div
  className="text text--light text--secondary c0"
  disabled={false}
  size="hecto"
>
  Text
</div>
`;
